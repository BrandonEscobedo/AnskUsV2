@page "/Pregunta/Resultado"
@inject IStateJugador _stateJugador
@inject IStateContainerOnPreg _stateContainer
@inject NavigationManager _navigationManager
@layout ComponentBaseResultado
@implements IDisposable
@if (!_stateJugador.DatosPregunta.esCorrecto)
{
    <div class="ContainerResultadoIncorrecto">
        <div class="ContainerTexto-img">
            <div class="ContainerTexto">
                Incorrecto
            </div>

            <div class="ContainerImg">
                <img src="/img//Incorrecto.png" />
            </div>
            <div class="RankingJugador">
                <div class="RankingTexto">
                    @TextoAyuda
                </div>
                <div class="RankingContainerPuesto">
                    <div class="RankingPuesto">
                        @_stateJugador.Posicion
                    </div>
                </div>
            </div>

        </div>
    </div>
}
else
{
    <div class="ContainerResultado">
        <div class="ContainerTexto-img">
            <div class="ContainerTexto">
                Correcto
            </div>

            <div class="ContainerImg">
                <img src="/img/Correcto.png" />
            </div>
            <div class="RankingJugador">
                <div class="RankingTexto">
                    @TextoAyuda
                </div>
                <div class="RankingContainerPuesto">
                    <div class="RankingPuesto">
                        @_stateJugador.Posicion
                    </div>
                </div>
            </div>
            <div class="ContainerPuntos">
                +@(_stateJugador.DatosPregunta.puntos)
            </div>
        </div>
    </div>
}


@code {
    private string TextoAyuda = "";
    protected override void OnInitialized()
    {
        _stateContainer.OnNavegarARanking += OnNavegarARanking;
        _stateContainer.OnNavegarAClasificacion += OnNavegarAClasificacion;
        if (_stateJugador.Posicion == 1 || _stateJugador.Posicion == 2 || _stateJugador.Posicion == 3)
        {
            TextoAyuda = "Estas en el podio";
        }
        else
        {
            TextoAyuda = "Estas en la posición";
        }
      
    }
    private void OnNavegarAClasificacion()
    {
        var ListOrder = _stateJugador.participantes.OrderByDescending(x => x.PuntosActuales).Take(3).ToList();
        if (ListOrder.FirstOrDefault(x => x.IdPeC == _stateJugador.participante.IdPeC) != null)
        {
            _navigationManager.NavigateTo("/Game/Clasificacion");
        }
        else
        {
            _navigationManager.NavigateTo("/Resultado");

        }
    }
    private void OnNavegarARanking()
    {
        _navigationManager.NavigateTo("/Jugador/Ranking");
    }
    public void Dispose()
    {
        _stateContainer.OnNavegarARanking -= OnNavegarARanking;
    }
}
