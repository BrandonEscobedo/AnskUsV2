@page "/Lobby/OnGame/Pregunta"
@inject IStateJugador _stateJugador
@layout ComponentBaseHub
@inject IStateContainerOnPreg _stateContainer
@inject IHubJugadorServices _hubJugadorService
@inject NavigationManager _navigationManager
<section class="preguntas__body">

    <PreguntaComponent OnSiguiente="Siguiente" MostrarBotones="@mostrar"
                       OnPreguntaContestada="@PreguntaContestada">
    </PreguntaComponent>

    @if (MostrarValidar)
    {
        <h2 class="title"> Revisando tu respuesta...</h2>
    }
    <div class="ContainerFooter" id="footerDiv">
        <div class="ContainerFooterSection">
            <div class="TotalPreguntas">
               @_stateContainer.PreguntaActual/@_stateContainer.DatosCuestionario.CantidadPreguntas
            </div>
            <div class="TotalPuntos">
                Puntos:@_stateJugador.participante.PuntosActuales
            </div>
        </div>
    </div>
</section>

@code {
    @using System.Threading;
    private Timer? _timer;
    private int segundos = 10;
    private bool MostrarValidar = false;
    private bool mostrar = true;
    private void Siguiente()
    {
        _stateJugador.GenerarPuestoRanking();
        _navigationManager.NavigateTo("/Pregunta/Resultado");
    }
    protected override void OnInitialized()
    {
        _stateContainer.OnNavegarARanking += OnNavegarARanking;
        base.OnInitialized();
    }
    private void OnNavegarARanking()
    {
        _navigationManager.NavigateTo("/Sala/Ranking");
    }
    private async void PreguntaContestada(DatosPregunta DatosPreg)
    {
        _stateJugador.participante.PuntosAnteriores = _stateJugador.participante.PuntosActuales;
        _stateJugador.participante.PuntosActuales += DatosPreg.puntos;
        _stateJugador.DatosPregunta = DatosPreg;
        if (DatosPreg.esCorrecto)
        {
            _stateJugador.participante.CantidadPacertadas += 1;
        }
        mostrar = false;
        MostrarValidar = true;
        await _hubJugadorService.MandarPreguntaContestada();    
        //Crear funcion para mostrar los nuevos puntos y si escorrecto
    }
    public void Dispose()
    {
    }

}
